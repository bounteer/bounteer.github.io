---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import AffiliateGrid from "../client_side/hydration/AffiliateGrid";
---

<Layout title="Partners - IsMail">
  <Header />
  <main>
    <!-- Hero Section -->
    <section
      class="relative overflow-hidden bg-linear-to-b from-primary-100 to-white dark:from-primary-950 dark:to-secondary-950 pt-20 md:pt-28 pb-16 md:pb-20"
    >
      <div class="absolute inset-0 z-0 opacity-30">
        <div class="absolute inset-0 bg-grid-pattern"></div>
      </div>

      <div class="container-custom relative z-10">
        <div class="text-center max-w-3xl mx-auto px-4">
          <h1
            class="text-3xl md:text-4xl lg:text-5xl mb-4 md:mb-6 text-gray-900 dark:text-white animate-slide-down"
          >
            IsMail <span class="text-accent-500">Partners</span>
          </h1>
          <p
            class="text-lg md:text-xl text-gray-700 dark:text-gray-300 mb-6 md:mb-8 animate-slide-up"
            style="animation-delay: 200ms"
          >
            Featured partners growing leads with us.
          </p>
        </div>
      </div>

      <!-- Animated Shapes -->
      <div class="absolute -bottom-16 left-0 right-0 flex justify-center">
        <div
          class="w-48 md:w-64 h-48 md:h-64 bg-accent-400 rounded-full filter blur-3xl opacity-20 animate-pulse"
        >
        </div>
      </div>
    </section>

    <section class="section relative z-10 overflow-hidden py-12 md:py-16">
      <div class="container-custom">
        <AffiliateGrid client:load />
      </div>
    </section>
  </main>
</Layout>

<Footer />

<style>
  /* Grid Pattern Background */
  .bg-grid-pattern {
    background-image: linear-gradient(
        to right,
        rgba(99, 102, 241, 0.1) 1px,
        transparent 1px
      ),
      linear-gradient(to bottom, rgba(99, 102, 241, 0.1) 1px, transparent 1px);
    background-size: 40px 40px;
  }

  /* 3D Card Transformations */
  .perspective {
    perspective: 1000px;
  }

  .preserve-3d {
    transform-style: preserve-3d;
  }

  .backface-hidden {
    backface-visibility: hidden;
  }

  .rotate-y-180 {
    transform: rotateY(180deg);
  }

  /* Touch device support for 3D cards */
  @media (hover: none) {
    .touch-action-card {
      transition: none;
    }

    .touch-action-card:active {
      transform: rotateY(180deg);
    }
  }

  /* Parallax Effect */
  .parallax-container {
    overflow: hidden;
  }

  .parallax-demo {
    transform-style: preserve-3d;
    perspective: 1000px;
  }

  .parallax-layer {
    will-change: transform;
    transition: transform 0.1s ease-out;
  }

  .layer-1 {
    transform: translateZ(-10px) scale(2);
  }

  .layer-2 {
    transform: translateZ(0);
  }

  .layer-3 {
    transform: translateZ(10px) scale(0.9);
  }

  /* Particle Animation */
  .particles-container:hover .particles,
  .particles-container:active .particles {
    opacity: 1;
  }

  .particles {
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  /* Feature Row Animation */
  .feature-row {
    transition: all 0.3s ease;
  }

  .feature-row:hover {
    background-color: rgba(99, 102, 241, 0.05);
  }

  /* Interactive Demo */
  .interactive-demo {
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    max-width: 100%;
  }

  .interactive-demo:hover {
    transform: translateY(-5px);
    box-shadow:
      0 20px 25px -5px rgba(0, 0, 0, 0.1),
      0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  /* Mobile optimizations */
  @media (max-width: 640px) {
    .interactive-demo:hover {
      transform: none;
    }

    .comparison-table {
      font-size: 0.875rem;
    }

    /* 修复卡片在小屏幕上的高度和定位问题 */
    .feature-card {
      position: relative;
      min-height: 280px;
      margin-bottom: 2rem;
      clear: both;
      display: block;
    }

    /* 确保3D卡片在翻转时内容不会溢出 */
    .preserve-3d {
      min-height: 280px;
    }

    /* 确保卡片内容不会重叠 */
    .card {
      height: 100%;
      position: relative;
      overflow: visible;
    }

    /* 修复平行滚动演示在移动设备上的显示 */
    .parallax-demo {
      height: 160px;
      margin-top: 1rem;
    }

    /* 确保标题和文本不会重叠 */
    h3 {
      position: relative;
      z-index: 5;
    }
  }

  /* 修复触摸设备上的3D卡片翻转问题 */
  @media (hover: none) {
    .touch-action-card {
      transition: transform 0.5s ease;
    }

    /* 确保卡片在移动设备上有足够的空间 */
    .feature-card.perspective {
      margin-bottom: 2.5rem;
    }

    /* 确保卡片内容在移动设备上不会重叠 */
    .feature-card.perspective .card {
      box-shadow:
        0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
  }

  /* 确保网格布局在移动设备上正确显示 */
  .grid {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  @media (min-width: 768px) {
    .grid {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (min-width: 1024px) {
    .grid {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
</style>

<script>
  // Store references to event listeners for cleanup
  const cleanupFunctions: Array<() => void> = [];

  // Function to initialize all interactive features
  function initializeFeatures() {}

  // Initialize features on initial page load
  document.addEventListener("DOMContentLoaded", initializeFeatures);

  // Initialize features when navigating to this page with Astro's view transitions
  document.addEventListener("astro:page-load", initializeFeatures);

  // Cleanup when page is unloaded or before navigation
  document.addEventListener("astro:before-swap", () => {
    // Execute all cleanup functions
    cleanupFunctions.forEach((cleanup) => cleanup());
    // Clear the array
    cleanupFunctions.length = 0;
  });

  // Also clean up on window unload as a fallback
  window.addEventListener("unload", () => {
    cleanupFunctions.forEach((cleanup) => cleanup());
  });
</script>
