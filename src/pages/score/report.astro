---
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";

const DIRECTUS_URL = "https://directus.bounteer.com";
const READ_TOKEN = "5OTK2voWFO_vTptGVMAY2Oxz9XBCDAvn";
---

<Layout title={`Role Fit Report - Bounteer`}>
  <Header />

  <main class="py-16 bg-white">
    <div class="container-custom max-w-4xl mx-auto">
      <div
        class="relative rounded-2xl border border-gray-200 shadow-xl p-8 bg-white"
        x-data="(() => {
          const cfg = $el.dataset;
          return {
            // config
            reportId: '',            // set in init()
            directusUrl: cfg.directusUrl,
            readToken: cfg.readToken,

            // state
            loading: true,
            error: '',
            report: null,

            pretty(obj){ try{ return JSON.stringify(obj, null, 2); } catch { return '—'; } },
            score(){ const r = this.report || {}; return r.score ?? r.data?.score ?? r.report?.score ?? '—'; },
            highlights(){ const r = this.report || {}; return r.highlights ?? r.data?.highlights ?? r.report?.highlights ?? []; },

            async init(){
              // ✅ read id from the URL at runtime
              this.reportId = new URLSearchParams(window.location.search).get('id') || '';
              if (!this.reportId) return;
              await this.fetchReport();
            },

            async fetchReport(){
              this.loading = true; this.error = '';
              try{
                const url = `${this.directusUrl}/items/role_fit_score_report/${encodeURIComponent(this.reportId)}?fields=*.*`;
                const res = await fetch(url, { headers: { Authorization: `Bearer ${this.readToken}` } });
                const json = await res.json();
                if (!res.ok) throw new Error(json?.errors?.[0]?.message || 'Fetch failed');
                this.report = json?.data ?? null;
              }catch(e){ this.error = e?.message || 'Unexpected error'; }
              finally{ this.loading = false; }
            }
          }
        })()"
        x-init="init()"
        data-directus-url={DIRECTUS_URL}
        data-read-token={READ_TOKEN}
      >
        <template x-if="!reportId">
          <div class="text-center py-20 text-gray-500">
            <p>
              No <code>id</code> provided. Visit as <code
                >/score/report?id=123</code
              >.
            </p>
          </div>
        </template>

        <template x-if="reportId">
          <div>
            <div
              x-show="loading"
              class="absolute inset-0 z-50 flex items-center justify-center bg-white/80 backdrop-blur-sm"
            >
              <div class="flex flex-col items-center gap-4">
                <svg class="h-10 w-10 animate-spin" viewBox="0 0 24 24">
                  <circle
                    cx="12"
                    cy="12"
                    r="10"
                    stroke="currentColor"
                    stroke-width="4"
                    fill="none"
                    opacity="0.25"></circle>
                  <path
                    d="M4 12a8 8 0 018-8"
                    stroke="currentColor"
                    stroke-width="4"
                    fill="none"></path>
                </svg>
                <p class="text-sm text-gray-700">Loading…</p>
              </div>
            </div>

            <h1 class="text-2xl font-semibold text-gray-900 mb-2">
              Role Fit Score Report
            </h1>
            <p class="text-sm text-gray-500 mb-6">
              Report ID: <span x-text="reportId"></span>
            </p>

            <template x-if="error">
              <div
                class="mb-6 p-3 rounded-lg bg-red-50 text-red-700 text-sm"
                x-text="error"
              >
              </div>
            </template>

            <div class="grid gap-6" x-show="!loading && !error && report">
              <div class="p-4 rounded-xl border">
                <h2 class="font-semibold mb-2">Match Score</h2>
                <p class="text-3xl font-bold" x-text="score()"></p>
              </div>

              <div class="p-4 rounded-xl border">
                <h2 class="font-semibold mb-2">Highlights</h2>
                <ul class="list-disc ml-5 space-y-1">
                  <template x-for="(item, idx) in highlights()" :key="idx">
                    <li x-text="item"></li>
                  </template>
                  <template x-if="!highlights()?.length">
                    <li class="text-gray-500">No highlights available.</li>
                  </template>
                </ul>
              </div>

              <div class="p-4 rounded-xl border">
                <h2 class="font-semibold mb-2">Raw JSON</h2>
                <pre
                  class="text-xs bg-gray-50 p-3 rounded-lg overflow-auto"
                  x-text="pretty(report)">
                </pre>
              </div>
            </div>

            <div class="mt-8">
              <a
                href="/score"
                class="text-primary-600 underline hover:text-primary-800"
                >&larr; New analysis</a
              >
            </div>
          </div>
        </template>
      </div>
    </div>
  </main>

  <Footer />
</Layout>
